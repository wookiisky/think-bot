/* Content Extraction Styles - Content preview and extraction controls */

/* Content extraction area */
.content-section {
  border-bottom: 1px solid var(--border-color);
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  position: relative;
  min-height: 0; /* Allow content section to be completely hidden */
}

.content-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 4px 8px;
  font-size: 14px;
  font-weight: 500;
  flex-shrink: 0;
}

.content-container {
  position: relative;
  padding: 0 8px 4px;
  overflow-y: auto;
  flex-grow: 1;
}

.extracted-content {
  font-size: 14px;
  line-height: 1.5;
  background-color: var(--light-gray);
  padding: 4px;
  border-radius: 4px;
}

/* Loading states */
.loading-indicator {
  padding: 8px;
  text-align: center;
}

.loading-dots-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 12px;
}

.loading-dots {
  display: flex;
  gap: 8px;
  align-items: center;
}

.dot {
  width: 8px;
  height: 8px;
  background-color: var(--primary-color);
  border-radius: 50%;
  animation: loading-dots 1.4s ease-in-out infinite both;
}

.dot:nth-child(1) {
  animation-delay: -0.32s;
}

.dot:nth-child(2) {
  animation-delay: -0.16s;
}

.dot:nth-child(3) {
  animation-delay: 0s;
}

.dot:nth-child(4) {
  animation-delay: 0.16s;
}

@keyframes loading-dots {
  0%, 80%, 100% {
    transform: scale(0.8);
    opacity: 0.5;
  }
  40% {
    transform: scale(1.2);
    opacity: 1;
  }
}

.loading-text {
  font-size: 14px;
  color: var(--text-color);
  opacity: 0.8;
  animation: loading-text-pulse 1.4s ease-in-out infinite;
}

@keyframes loading-text-pulse {
  0%, 100% {
    opacity: 0.8;
  }
  50% {
    opacity: 0.5;
  }
}

/* Error states */
.extraction-error {
  font-size: 14px;
  padding: 8px;
  text-align: center;
  color: var(--error-color);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 6px;
}

/* Spinner for loading states */
.spinner {
  display: inline-block;
  width: 12px;
  height: 12px;
  border: 2px solid rgba(0, 0, 0, 0.1);
  border-left-color: var(--primary-color);
  border-radius: 50%;
  animation: spinner 1s linear infinite;
}

@keyframes spinner {
  to {
    transform: rotate(360deg);
  }
}

/* Resize handle for content section */
.resize-handle {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 8px;
  cursor: ns-resize;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: transparent;
  transition: background-color 0.2s ease;
  z-index: 10; /* Ensure resize handle is always visible and interactive */
  min-height: 8px; /* Maintain minimum size for interaction even when content height is 0 */
}

.resize-handle:hover {
  background-color: rgba(0, 0, 0, 0.05);
}

.resize-handle-line {
  width: 40px;
  height: 2px;
  background-color: var(--border-color);
  border-radius: 1px;
  transition: background-color 0.2s ease;
}

.resize-handle:hover .resize-handle-line {
  background-color: var(--primary-color);
}

/* Special styling when content section height is 0 or very small */
.content-section[style*="height: 0px"] .resize-handle,
.content-section[style*="height: 1px"] .resize-handle,
.content-section[style*="height: 2px"] .resize-handle {
  background-color: rgba(66, 133, 244, 0.1); /* Subtle blue background for better visibility */
}

.content-section[style*="height: 0px"] .resize-handle-line,
.content-section[style*="height: 1px"] .resize-handle-line,
.content-section[style*="height: 2px"] .resize-handle-line {
  background-color: var(--primary-color); /* Make resize line more visible when content is hidden */
}

/* Responsive content section adjustments */
@media (max-width: 280px) {
  .content-header {
    padding: 2px 4px;
  }
  
  .content-container {
    padding: 0 4px 2px;
  }
} 